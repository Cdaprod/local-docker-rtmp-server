# Stage 1: Build OBS Studio and RTSP plugin
FROM debian:bullseye AS builder

ENV OBS_INSTALL_PREFIX=/opt/obs
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y \
  build-essential cmake git curl unzip \
  libx11-dev libxrandr-dev libxss-dev libgl1-mesa-dev \
  libv4l-dev libpulse-dev libasound2-dev libwayland-dev \
  qtbase5-dev qtwayland5 libqt5waylandclient5 libqt5waylandcompositor5 \
  qttools5-dev qttools5-dev-tools \
  ffmpeg libavdevice-dev libavfilter-dev libavformat-dev libavcodec-dev \
  ca-certificates gpg pkg-config

WORKDIR /build

# Clone and build OBS Studio
RUN git clone --recursive https://github.com/obsproject/obs-studio.git && \
    cd obs-studio && mkdir build && cd build && \
    cmake -DUNIX_STRUCTURE=1 -DCMAKE_INSTALL_PREFIX=${OBS_INSTALL_PREFIX} .. && \
    make -j$(nproc) && make install

# Clone and build RTSP plugin
RUN git clone --recursive https://github.com/iamscottxu/obs-rtspserver.git && \
    cd obs-rtspserver && mkdir build && cd build && \
    cmake -DCMAKE_INSTALL_PREFIX=${OBS_INSTALL_PREFIX} .. && \
    make -j$(nproc) && make install

# Stage 2: Minimal runtime image with only needed binaries and libraries
FROM debian:bullseye AS obs-runtime

ENV DEBIAN_FRONTEND=noninteractive
ENV OBS_INSTALL_PREFIX=/opt/obs
ENV LD_LIBRARY_PATH=$OBS_INSTALL_PREFIX/lib:$OBS_INSTALL_PREFIX/lib/obs:/usr/lib

RUN apt-get update && apt-get install -y \
  ffmpeg curl x11vnc xvfb novnc websockify \
  libwayland-client0 libasound2 pulseaudio && \
  apt-get clean && rm -rf /var/lib/apt/lists/*

COPY --from=builder ${OBS_INSTALL_PREFIX} ${OBS_INSTALL_PREFIX}
RUN ln -s ${OBS_INSTALL_PREFIX}/bin/obs /usr/bin/obs

CMD ["obs"]