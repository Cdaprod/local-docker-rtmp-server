version: "3.9"

services:
  rtmp-server:
    build: ./rtmp-server
    container_name: rtmp_server
    restart: unless-stopped
    ports:
      - "1935:1935"  # RTMP
      - "8080:8080"  # HTTP
    volumes:
      - ./public/assets:/usr/share/nginx/html/assets:ro  # Static assets
      - ./credentials.json:/etc/credentials.json:ro  # Credentials for other services
      - /tmp/rtmp-recordings:/tmp/hls:rw  # Local HLS temp files (optional, mapped to host)
    env_file:
      - .env
    environment:
      - TZ=UTC
      - NGINX_WORKER_PROCESSES=auto
      - NGINX_WORKER_CONNECTIONS=2048
      - MAX_SEGMENT_DURATION=6
      - NAS_IP_OR_HOSTNAME=${NAS_IP_OR_HOSTNAME}    # NAS IP or Hostname
      - NAS_SHARE_NAME=${NAS_SHARE_NAME}           # NAS Share Path
      - NAS_USERNAME=${NAS_USERNAME}              # NAS Username
      - NAS_PASSWORD=${NAS_PASSWORD}              # NAS Password
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    depends_on:
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: "4g"
    labels:
      com.cdaprod.project: "RTMP Streaming Server"
      com.cdaprod.version: "1.1.0"
      com.cdaprod.env: "${ENVIRONMENT:-production}"
      com.cdaprod.description: "Enhanced RTMP server with multi-source streaming"
      com.cdaprod.maintainer: "Cdaprod <Cdaprod@Cdaprod.dev>"
    networks:
      - rtmp_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./event-broker/config/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    healthcheck:
      test: ["CMD-SHELL", "rabbitmqctl status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - rtmp_network

  metadata-enricher:
    build:
      context: ./event-broker
      dockerfile: Dockerfile
    container_name: metadata_enricher
    restart: unless-stopped
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - rtmp_network

  # rtmp-processor:
  #   build:
  #     context: ./rtmp-processor
  #     dockerfile: Dockerfile
  #   container_name: rtmp_processor
  #   restart: unless-stopped
  #   environment:
  #     - RABBITMQ_HOST=rabbitmq
  #     - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
  #     - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy
  #   networks:
  #     - rtmp_network

volumes:
  rabbitmq_data:

networks:
  rtmp_network:
    external: true
    name: rtmp_network