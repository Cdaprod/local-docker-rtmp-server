name: Build & Publish OBS Runtime

on:
  push:
    tags:
      - 'v*.*.*' # v1.0.0, v1.2.3, etc.

env:
  IMAGE_NAME: obs-runtime-builder
  DOCKERHUB_USER: cdaprod
  GHCR_NAMESPACE: ghcr.io/cdaprod/local-docker-rtmp-server
  USE_DOCKERHUB: false  # Set to true if switching to DockerHub

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: env.USE_DOCKERHUB == 'false'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to DockerHub
        if: env.USE_DOCKERHUB == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Tag
        id: extract_tag
        run: echo "TAG=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT

      - name: Build and Push Image
        uses: docker/build-push-action@v5
        with:
          context: ./src/dockerfiles/obs-runtime-builder
          file: ./src/dockerfiles/obs-runtime-builder/Dockerfile
          platforms: linux/arm64
          push: true
          tags: |
            ${{ env.USE_DOCKERHUB == 'true' && format('{0}/{1}:{2}', env.DOCKERHUB_USER, env.IMAGE_NAME, steps.extract_tag.outputs.TAG) || format('{0}/{1}:{2}', env.GHCR_NAMESPACE, env.IMAGE_NAME, steps.extract_tag.outputs.TAG) }}